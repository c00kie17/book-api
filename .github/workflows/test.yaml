name: Test

on:
  workflow_run:
    workflows: ["Lint"]
    types: [completed]
    branches:
      - '**'

env:
  PHP_VERSION: '8.2'
  NODE_VERSION: '18'
  APP_ENV: testing
  DB_CONNECTION: mysql
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  DB_DATABASE: laravel_test
  DB_USERNAME: root
  DB_PASSWORD: password

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Create .env file
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run unit tests
        run: php artisan test --testsuite=Unit

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug
      - name: Setup Node.ts
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install node dependencies
        run: npm ci

      - name: Build node
        run: npm run build

      - name: Install php dependencies
        run: composer install --prefer-dist --no-progress

      - name: Create .env file
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run database migrations
        run: php artisan migrate --env=testing

      - name: Run feature tests
        run: php artisan test --testsuite=Feature

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: [ unit-tests, integration-tests ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.ts
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Run Jest tests
        run: npm run test
